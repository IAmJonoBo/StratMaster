---
name: Automated Dependency Upgrades

on:
  schedule:
    # Run every Monday at 6 AM UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:
    inputs:
      scope:
        description: 'Scope of dependencies to upgrade'
        required: true
        default: 'python'
        type: choice
        options:
          - python
          - docker
          - github-actions
          - all
      update_type:
        description: 'Type of updates to apply'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  pull-requests: write
  security-events: write

jobs:
  dependency-upgrade:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - uses: actions/setup-python@v6
        with:
          python-version: "3.12"
          cache: pip
      
      - name: Install dependencies
        run: |
          pip install PyYAML requests bandit pip-audit
          pip install -e packages/api
      
      - name: Check for dependency updates
        id: check
        run: |
          python scripts/dependency_upgrade.py check > dependency_check.log
          echo "check_output<<EOF" >> $GITHUB_OUTPUT
          cat dependency_check.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Plan dependency upgrades
        id: plan
        run: |
          SCOPE="${{ github.event.inputs.scope || 'python' }}"
          python scripts/dependency_upgrade.py plan --scope $SCOPE > upgrade_plan.log
          echo "plan_output<<EOF" >> $GITHUB_OUTPUT
          cat upgrade_plan.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Apply safe upgrades
        id: upgrade
        run: |
          SCOPE="${{ github.event.inputs.scope || 'python' }}"
          UPDATE_TYPE="${{ github.event.inputs.update_type || 'patch' }}"
          
          # Only auto-apply patch updates, require manual approval for others
          if [ "$UPDATE_TYPE" = "patch" ]; then
            python scripts/dependency_upgrade.py upgrade --scope $SCOPE --type $UPDATE_TYPE > upgrade_result.log
            echo "upgrade_applied=true" >> $GITHUB_OUTPUT
          else
            echo "upgrade_applied=false" >> $GITHUB_OUTPUT
            echo "Manual approval required for $UPDATE_TYPE updates" > upgrade_result.log
          fi
          
          echo "upgrade_output<<EOF" >> $GITHUB_OUTPUT
          cat upgrade_result.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Run tests after upgrade
        if: steps.upgrade.outputs.upgrade_applied == 'true'
        run: |
          pip install pytest
          pytest packages/api/tests/ -q
      
      - name: Security scan after upgrade
        if: steps.upgrade.outputs.upgrade_applied == 'true'
        run: |
          bandit -c .security.cfg -r packages/ -f json -o bandit-report-post-upgrade.json || true
          pip-audit --desc --format json --output pip-audit-report-post-upgrade.json || true
        continue-on-error: true
      
      - name: Create Pull Request
        if: steps.upgrade.outputs.upgrade_applied == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(deps): automated dependency upgrades"
          title: "🤖 Automated Dependency Upgrades"
          body: |
            ## Automated Dependency Upgrades
            
            This PR contains automatically applied dependency upgrades generated by the StratMaster dependency management system.
            
            ### Upgrade Summary
            ```
            ${{ steps.upgrade.outputs.upgrade_output }}
            ```
            
            ### Dependency Check Results
            ```
            ${{ steps.check.outputs.check_output }}
            ```
            
            ### Upgrade Plan
            ```
            ${{ steps.plan.outputs.plan_output }}
            ```
            
            ### Validation
            - ✅ Tests passed after upgrade
            - 🔒 Security scan completed
            - 🔐 Lock files regenerated
            
            ### Next Steps
            - Review the changes for any breaking changes
            - Verify all services start correctly
            - Merge if all checks pass
            
            ---
            
            **Generated by**: StratMaster Automated Dependency Management
            **Scope**: ${{ github.event.inputs.scope || 'python' }}
            **Type**: ${{ github.event.inputs.update_type || 'patch' }}
            **Workflow**: `${{ github.workflow }}`
          branch: automated/dependency-upgrades
          delete-branch: true
          labels: |
            dependencies
            automated
            security
      
      - name: Upload security reports
        if: steps.upgrade.outputs.upgrade_applied == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: post-upgrade-security-reports
          path: |
            bandit-report-post-upgrade.json
            pip-audit-report-post-upgrade.json
          retention-days: 30
      
      - name: Comment on manual approval needed
        if: steps.upgrade.outputs.upgrade_applied == 'false'
        run: |
          echo "::notice title=Manual Approval Required::${{ github.event.inputs.update_type || 'minor/major' }} updates require manual review and approval"